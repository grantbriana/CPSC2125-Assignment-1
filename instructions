
Instructions
Read the following carefully: 

ASSIGNMENT 3 INSTRUCTIONS

Your starting point for this assignment is your Assignment 2. Do NOT use Bootstrap for this assignment! 

Look at your feedback for assignment 2 and start by applying the changes listed in the feedback.

Create a GitHub branch for Assignment 3.

The objectives for this assignment are:

create a responsive, mobile-friendly design using media queries
explore accessibility
Step 1.

First you are going to practice more CSS by modifying your site layout. Your current layout is: 

Header, nav, main, footer layout

You will modify so that all pages have the following layout: 

header, nav, main, aside, footer

In the asides add the following:

Home: Add a new image; resize the image to about the size you want it to be on the screen using MS Paint or a similar program. 
Page 1: canvas that uses javascript to draw some text: https://www.tutorialspoint.com/html5/html5_canvas.htm https://www.tutorialspoint.com/html5/canvas_text_fonts.htm
Page 2: iframe that contains a website of your choice https://www.w3schools.com/tags/tag_iframe.asp
Page 3: Use the <svg> element to add an svg graphic: https://www.w3schools.com/html/html5_svg.asp
Step 2.

Use media queries to offer style options for different sized viewports. Example: collapse menus or stack page elements when your site is viewed on a mobile device

Try out these media query examples: https://www.w3schools.com/css/css3_mediaqueries_ex.asp.

Keep reading about responsive design.

https://www.w3schools.com/css/css_rwd_intro.asp

Create a responsive design for your site.  Add one media query to stack your page elements when the page is viewed on a phone. The original layout should be:

header header header

nav main aside

footer footer footer 

that changes when resized to:

header

nav

main

aside

footer

It will look like this:

layout

Resize your page to test the media query.

Also set so the background color changes when resized.

Step 3.

Accessibility is a complex topic and we can't cover all the details in this class. But we can start exploring the topic and tools. Read the brief section called "What is accessibility?" on this site: https://www.w3.org/WAI/fundamentals/accessibility-intro/  and check out the accessibility tutorial on W3Schools: https://www.w3schools.com/html/html_accessibility.asp Add the following accessibility to your page: 

Add the alt attribute to the image in the index. Read how to use alt tags appropriately depending on the kind of image: https://www.w3.org/WAI/tutorials/images/ Make sure you've resized your image. You don't need to load a huge image if you plan to display it small. Your users will have to load the entire thing which wastes bandwidth. This is a problem for users in areas without access to broadband internet.*
Add a text alternative to your canvas on page 1 using an aria-label and add a role: https://pauljadam.com/demos/canvas.html*
Add a title to your iframe and use relative sizes. 
Add the role of img and an aria-labelledby using ids given to a title and description you add as children in the svg tag. Read about making inline SVG accessible here: https://css-tricks.com/accessible-svgs/
Check that users can use the tab key to navigate and use your pages. We want to make sure that every element the user can interact with can be reached using the tab key. This includes links, form elements, iframes, etc. We also want to make sure that these have an order that makes sense. These both can be accomplished using the tabindex attribute. Set the tabindex attribute on some of your elements so the user can tab through your pages in a logical fashion and reach every element that the user should be able to interact with. Read about the tabindex attribute here: https://www.w3schools.com/tags/att_global_tabindex.asp  and here https://webaim.org/techniques/keyboard/tabindex 
Note that you don't have an audio clip or video for this assignment, but you may want to add these in your project. Video and audio are complex when it comes to accessibility. There is no current standard for coding accessibility for video and audio. Ensure that sound and video are sufficient quality. Video should be captioned and provide a transcript. The transcripts should include both the text of the audio as well as a description of what's happening in the video so that anyone who can't play the video can get the video content. Audio should provide a transcript. Aria tags can also be used: https://www.w3.org/WAI/PF/HTML/wiki/Media_Alt_Technologies

Test your navigation. Commit and push your branch to Github.

Submit two links: the Repl.it and the Github link into the submission box in CougarView.

Grading checklist:

Corrections made on Assignment 2
Assignment 2 is copied and modified to have header, footer and a center section with three columns (nav, main, aside)
The asides have the following content: image in index, canvas with text drawn via javascript on page 1, iframe with website on page 2, <svg> with simple graphic on page 3
A media query added to stack page elements on mobile (header, left column, center column, right column, footer all in a stack on a smaller screen)
Background color also changes when resized
Accessibility: alt tag is added to image in index
Accessibility: aria label added to canvas
Accessibility: iframe has title and uses relative sizing
Accessibility: <svg> has role, aria-labelledby, title and description with ids
Accessibility: Keyboard input works on all pages (you can use tab to get to all your elements).  Set the tabindex attribute on at least one of your elements to make sure that users can tab through in a logical way. 
Don't copy pasta!!! If you get code from somewhere you must include comments about where it came from, how it works, and any modifications you made!!!
You must understand all the code you turn in! It is plagiarism (academic dishonesty) to use code written by other people without proper attribution. If you use ANY code you find on the internet you MUST include a comment where it came from. You MUST understand how it works and how to modify it. You must explain in the comment how it works and any changes you made. Failure to do so will result in a 0 on the assignment and may result in an academic misconduct report. 